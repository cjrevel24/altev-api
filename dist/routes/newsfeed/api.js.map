{"version":3,"sources":["../../../src/routes/newsfeed/api.js"],"names":["router","require","Router","newsFeeds","uuidv4","v4","get","req","res","status","json","errors","msg","newsId","params","viewSpecificNewsfeed","find","findNewsId","id","parseInt","editId","editSpecificNewsfeed","editNewsId","patch","updateId","body","post_title","post_description","updateNewsfeed","send","deleteId","deleteById","filter","news","post","newNews","push","module","exports"],"mappings":"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","sourcesContent":["const router = require(\"express\").Router();\r\nconst { newsFeeds } = require(\"../../db\");\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\n//GET NEWSFEED LIST\r\nrouter.get(\"/news-list\", (req, res) => {\r\n  if (!newsFeeds) {\r\n    return res.status(404).json({\r\n      errors: [\r\n        {\r\n          msg: \"Access denied!\",\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  return res.json(newsFeeds);\r\n});\r\n\r\n//VIEW SPECIFIC NEWSFEED\r\nrouter.get(\"/view-news/:newsId\", (req, res) => {\r\n  const { newsId } = req.params;\r\n  if (!newsId) {\r\n    return res.status(404).json({\r\n      errors: [\r\n        {\r\n          msg: \"Please send accurate payload (newsId)!\",\r\n        },\r\n      ],\r\n    });\r\n  } else {\r\n    const viewSpecificNewsfeed = newsFeeds.find((findNewsId) => {\r\n      return findNewsId.id === parseInt(newsId);\r\n    });\r\n    return res.json(viewSpecificNewsfeed);\r\n  }\r\n});\r\n\r\n//EDIT SPECIFIC NEWSFEED\r\nrouter.get(\"/edit-news/:editId\", (req, res) => {\r\n  const { editId } = req.params;\r\n  if (!editId) {\r\n    return res.status(404).json({\r\n      errors: [\r\n        {\r\n          msg: \"Please send accurate payload (newsId)!\",\r\n        },\r\n      ],\r\n    });\r\n  } else {\r\n    const editSpecificNewsfeed = newsFeeds.find((editNewsId) => {\r\n      return editNewsId.id === parseInt(editId);\r\n    });\r\n    return res.json(editSpecificNewsfeed);\r\n  }\r\n});\r\n\r\n//UPDATE SPECIFIC NEWSFEED\r\nrouter.patch(\"/update-news/:updateId\", (req, res) => {\r\n  const { updateId } = req.params;\r\n  const { post_title, post_description } = req.body;\r\n\r\n  const updateNewsfeed = newsFeeds.find((findNewsId) => {\r\n    return findNewsId.id === parseInt(updateId);\r\n  });\r\n\r\n  if (post_title) updateNewsfeed.post_title = post_title;\r\n  if (post_description) updateNewsfeed.post_description = post_description;\r\n\r\n  return res.send(\r\n    `Newsfeed with the ID ${updateId} has been successfully updated!`\r\n  );\r\n});\r\n\r\n//DELETE SELECTED POST\r\nrouter.delete(\"/delete-news/:deleteId\", (req, res) => {\r\n  const { deleteId } = req.params;\r\n  const deleteById = newsFeeds.filter((news) => {\r\n    return news.id !== deleteId;\r\n  });\r\n  if (!deleteById) {\r\n    return res.status(404).json({\r\n      errors: [\r\n        {\r\n          msg: \"Please send accurate payload (newsId)!\",\r\n        },\r\n      ],\r\n    });\r\n  } else {\r\n    return res\r\n      .status(200)\r\n      .json(`Newsfeed with the ID ${deleteId} has been successfully deleted!`);\r\n  }\r\n});\r\n\r\n//ADD NEW MEWSFEED\r\nrouter.post(\"/add-new-news\", (req, res) => {\r\n  const news = req.body;\r\n\r\n  if (!news) {\r\n    return res.status(404).json({\r\n      errors: [\r\n        {\r\n          msg: \"Please send accurate payload (post_title && post_description && post_date && post_user)!\",\r\n        },\r\n      ],\r\n    });\r\n  } else {\r\n    const newsId = uuidv4();\r\n    const newNews = { ...news, id: newsId };\r\n    newsFeeds.push(newNews);\r\n    res.json(\"Newsfeed has been succefully created!\");\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"api.js"}