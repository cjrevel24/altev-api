{"version":3,"sources":["../../src/middleware/checkAuth.js"],"names":["jwt","require","module","exports","req","res","next","token","header","status","json","errors","msg","verify","user","email"],"mappings":";;;;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP;AAAA,2FAAiB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,YAAAA,KADS,GACDH,GAAG,CAACI,MAAJ,CAAW,cAAX,CADC,EAGf;;AAHe,gBAIVD,KAJU;AAAA;AAAA;AAAA;;AAAA,6CAKNF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,cAAAA,MAAM,EAAE,CACN;AACEC,gBAAAA,GAAG,EAAE;AADP,eADM;AADkB,aAArB,CALM;;AAAA;AAAA;AAAA;AAAA,mBAeMZ,GAAG,CAACa,MAAJ,CAAWN,KAAX,EAAkB,kCAAlB,CAfN;;AAAA;AAePO,YAAAA,IAfO;AAgBbV,YAAAA,GAAG,CAACG,KAAJ,GAAYA,KAAZ;AACAH,YAAAA,GAAG,CAACU,IAAJ,GAAWA,IAAI,CAACC,KAAhB;AACAT,YAAAA,IAAI;AAlBS;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAoBND,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,cAAAA,MAAM,EAAE,CACN;AACEC,gBAAAA,GAAG,EAAE;AADP,eADM;AADkB,aAArB,CApBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const jwt = require(\"jsonwebtoken\");\r\n\r\nmodule.exports = async (req, res, next) => {\r\n  const token = req.header(\"x-auth-token\");\r\n\r\n  // CHECK IF WE EVEN HAVE A TOKEN\r\n  if (!token) {\r\n    return res.status(401).json({\r\n      errors: [\r\n        {\r\n          msg: \"No token found\",\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  try {\r\n    const user = await jwt.verify(token, \"nfb32iur32ibfqfvi3vf932bg932g932\");\r\n    req.token = token;\r\n    req.user = user.email;\r\n    next();\r\n  } catch (error) {\r\n    return res.status(400).json({\r\n      errors: [\r\n        {\r\n          msg: \"Invalid Token\",\r\n        },\r\n      ],\r\n    });\r\n  }\r\n};\r\n"],"file":"checkAuth.js"}